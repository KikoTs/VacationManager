@using Microsoft.AspNetCore.Identity
@inject SignInManager<AppUser> SignInManager
@inject UserManager<AppUser> UserManager

<ul class="navbar-nav">
@if (SignInManager.IsSignedIn(User))
{
    <li class="nav-item">
        <a class="nav-link" asp-controller="Roles" asp-action="Index">Roles</a>
    </li>
    if (await UserManager.IsInRoleAsync(await UserManager.GetUserAsync(User), "CEO") || await UserManager.IsInRoleAsync(await UserManager.GetUserAsync(User), "Team Lead"))
    {
        <li class="nav-item">
            <a class="nav-link" asp-controller="Holidays" asp-action="Pending">Pending requests</a>
        </li>
        if (await UserManager.IsInRoleAsync(await UserManager.GetUserAsync(User), "CEO"))
        {
            <li class="nav-item">
                <a class="nav-link" asp-controller="Employee" asp-action="Index">Employees</a>
            </li>
        }
    }

    <li class="nav-item">
        <a  class="nav-link" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello @User.Identity?.Name!</a>
    </li>
    <li class="nav-item">
        <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
            <button  type="submit" class="nav-link btn btn-link">Logout</button>
        </form>
    </li>
}
else
{
    <li class="nav-item">
        <a class="nav-link" asp-area="Identity" asp-page="/Account/Register">Register</a>
    </li>
    <li class="nav-item">
        <a class="nav-link" asp-area="Identity" asp-page="/Account/Login">Login</a>
    </li>
}
</ul>
